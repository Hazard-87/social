{"version":3,"sources":["components/Nav/Nav.module.css","redux/dialogsReducer.js","redux/usersReducer.js","assets/images/Preloader.svg","components/common/Preloader/Preloader.module.css","components/Nav/Friends/Friends.module.css","api/api.js","redux/auth-reducer.js","redux/app-reducer.js","hoc/withSuspense.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Nav/Friends/Friends.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","redux/sidebarReducer.js","redux/redux-store.js","index.js","components/Login/Login.module.css","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControl.js","utils/validation/validators.js","components/Header/Header.module.css","redux/profileReducer.js"],"names":["module","exports","initialState","dialogs","id","name","ava","messages","message","addMessageCreateAction","newMessageBody","type","dialogsReducer","state","action","users","pageSize","totalPageCount","currentPage","isFetching","followingInProgress","requestUsers","dispatch","a","toggleIsFetching","usersAPI","getUsers","data","setUsers","items","setTotalPageCount","totalCount","requestMoreUsers","nextPage","setMoreUsers","follow","userId","toggleFollowingProgress","getFollow","resultCode","followAccept","unfollow","getUnfollow","unfollowAccept","setCurrentPage","usersReducer","map","u","followed","concat","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","getAuth","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","isAuth","getAuthUserData","setAuthUserData","payload","authReducer","initialized","appReducer","withSuspense","Component","props","fallback","Preloader","News","Music","Settings","Friends","className","classes","friends","src","this","React","Nav","friendsElements","f","nav","item","to","authorizesUserId","activeClassName","active","NavContainer","connect","sidebar","auth","Header","profile","photos","header","onClick","HeaderContainer","profilePage","handleFocus","event","target","select","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","styles","input","Field","placeholder","onFocus","component","Input","validate","required","checkbox","error","formSummaryError","stopSubmit","_error","body","wrap","formData","MessagesContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","compose","withRouter","app","Promise","all","Boolean","window","location","hostname","match","sidebarReducer","reducers","combineReducers","messagesPage","profileReducer","usersPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","spinner","Element","meta","hasError","touched","formControl","Textarea","value","maxLengthCreator","maxLength","length","posts","likesCount","setUserProfile","setStatus","addPostAC","newPostBody"],"mappings":"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","file":"static/js/main.d1b70f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__OfxDp\",\"item\":\"Nav_item__2cAzO\",\"active\":\"Nav_active__A9KKZ\"};","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 2,\r\n            name: 'Polina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Alina',\r\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Evelina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\r\n        },\r\n        {id: 5, name: 'Papa', ava: 'https://steepbend.ru/wp-content/uploads/2013/04/Avatarki.jpg'},\r\n        {\r\n            id: 6,\r\n            name: 'Mama',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-06/1528544211_youloveit_ru_avatarki_disney_princessy_ralf_protiv_interneta03.png'\r\n        },\r\n        {id: 7, name: 'Max', ava: 'https://1message.ru/wp-content/uploads/2017/03/ustanovka-avatarki7.jpg'},\r\n        {id: 8, name: 'Brat', ava: 'https://download-cs.net/steam/avatars/3412.jpg'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'На Avatarko.ru', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 2, message: 'Паблик в котором💜', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 3, message: 'Hi', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 4, message: 'I\\'m norm', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 5, message: 'I\\'m learn a react', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 6, message: 'Perfect', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'},\r\n        {id: 7, message: 'Good like', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE :\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 8, message: action.newMessageBody, ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'\r\n                }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageCreateAction = (newMessageBody) => ({type: 'ADD-MESSAGE', newMessageBody})\r\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_MORE_USERS = 'SET_MORE_USERS'\r\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE'\r\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 8,\r\n    totalPageCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_MORE_USERS: {\r\n            let users = state.users.concat(action.users)\r\n            return {...state, users: users}\r\n        }\r\n        case SET_СURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return {...state, totalPageCount: action.totalPageCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalPageCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const requestMoreUsers = (nextPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(nextPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setMoreUsers(data.items))\r\n        dispatch(setTotalPageCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.getFollow(userId)\r\n        if (data.resultCode == 0) {\r\n            dispatch(followAccept(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n       let data = await usersAPI.getUnfollow(userId)\r\n            if (data.resultCode == 0) {\r\n                dispatch(unfollowAccept(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const followAccept = (userId) => ({type: 'FOLLOW', userId})\r\nexport const unfollowAccept = (userId) => ({type: 'UNFOLLOW', userId})\r\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\r\nexport const setMoreUsers = (users) => ({type: 'SET_MORE_USERS', users})\r\nexport const setCurrentPage = (currentPage) => ({type: 'SET_СURRENT_PAGE', currentPage})\r\nexport const setTotalPageCount = (totalPageCount) => ({type: 'SET_TOTAL_PAGE_COUNT', totalPageCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userId\r\n})\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/Preloader.1d2550da.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Preloader_spinner__2LRAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__3g72v\"};","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"e48e9649-c731-4063-bdca-82c75640897b\"}\r\n    // headers: {\"API-KEY\": \"d347e033-1c2d-465d-899e-93fbe631170a\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getFollow(id) {\r\n        return instance.post(`follow/${id}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUnfollow(id) {\r\n        return instance.delete(`follow/${id}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get('auth/me')\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n// export const loginAPI = {\r\n//     login () {\r\n//         return instance.post('auth/login')\r\n//     }\r\n// }\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER = 'SET_AUTH_USER'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login, isAuth} = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let action = stopSubmit(\"login\", {_error: response.data.messages})\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: 'SET_AUTH_USER',\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS',})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\r\n       dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport classes from \"./Friends.module.css\";\r\n\r\n\r\n\r\n// const Friends = (props) => {\r\n//\r\n//         return (\r\n//         <div>\r\n//             <div className={classes.friends}>\r\n//                 <img src={props.ava}/> {props.name}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nclass Friends extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={classes.friends}>\r\n                    <img src={this.props.ava}/> {this.props.name}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\r\n\r\nclass Nav extends React.Component {\r\n    friendsElements = () => {\r\n        this.props.friends.map(f => <Friends name={f.name} ava={f.ava}/>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className={classes.nav}>\r\n                <div className={classes.item}><NavLink to={`/profile/${this.props.authorizesUserId}`}\r\n                                                       activeClassName={classes.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/news'\r\n                                                       activeClassName={classes.active}>News</NavLink></div>\r\n                <div className={classes.item}><NavLink to='/messages'\r\n                                                       activeClassName={classes.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/music'\r\n                                                       activeClassName={classes.active}>Music</NavLink></div>\r\n                <div className={classes.item}><NavLink to='/users'\r\n                                                       activeClassName={classes.active}>Users</NavLink></div>\r\n                <div className={classes.item}><NavLink to='/settings'\r\n                                                       activeClassName={classes.active}>Settings</NavLink>\r\n                </div>\r\n                <div className={classes.item}><NavLink to='/friends'\r\n                                                       activeClassName={classes.active}>Friends</NavLink>\r\n                </div>\r\n                {this.friendsElements}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Nav from \"./Nav\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends,\r\n        authorizesUserId: state.auth.userId\r\n    }\r\n}\r\nconst NavContainer = connect(mapStateToProps)(Nav)\r\n\r\nexport default NavContainer;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    if (!props.profile.photos) {\r\n        props.profile.photos = ''\r\n    }\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='http://pngimg.com/uploads/vkontakte/vkontakte_PNG31.png'/>\r\n            <div className={classes.login}>\r\n                {props.isAuth\r\n                    ? <div><span>{props.login}</span>\r\n                        <button onClick={props.logout}>log out</button>\r\n                    </div>\r\n                    : <NavLink to={'/login'}>login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userId: state.auth.userId,\r\n    email: state.auth.email,\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.profilePage.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);","import React from \"react\";\r\nimport styles from './Login.module.css';\r\nimport classes from '../common/FormsControls/FormsControl.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControl\";\r\nimport {required} from \"../../utils/validation/validators\";\r\nimport {login} from '../../redux/auth-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.input}><Field placeholder={'email'} name={'email'} onFocus={handleFocus}\r\n                                                 component={Input} validate={[required]}/></div>\r\n            <div className={styles.input}><Field placeholder={'password'} name={'password'} type={'password'} onFocus={handleFocus}\r\n                                                 component={Input} validate={[required]}/></div>\r\n            <div><Field component={Input} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>remember\r\n                me\r\n            </div>\r\n            <div>\r\n                <button className={styles.login}>Login</button>\r\n            </div>\r\n            {props.error && <div className={classes.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n        // formData.email = ''\r\n        // formData.password = ''\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={`/profile/${props.authorizesUserId}`}/>\r\n    }\r\n\r\n        return (\r\n            <div className={styles.body}>\r\n                <div className={styles.wrap}>\r\n                    <h2>Login</h2>\r\n                    <LoginReduxForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    authorizesUserId: state.auth.userId\r\n})\r\nexport default connect(mapStateToProps, {login})(Login)","import React, { Suspense } from 'react';\r\nimport { withRouter, BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nimport './App.css';\r\n\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport NavContainer from './components/Nav/NavContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\n\r\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"appWrapper\">\r\n          <HeaderContainer />\r\n          <NavContainer />\r\n          <div className=\".content\">\r\n            <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\r\n            <Route path=\"/news\" render={() => <News />} />\r\n            <Route path=\"/messages\" render={withSuspense(MessagesContainer)} />\r\n            <Route path=\"/music\" render={() => <Music />} />\r\n            <Route path=\"/users\" render={withSuspense(UsersContainer)} />\r\n            <Route path=\"/settings\" render={() => <Settings />} />\r\n            <Route path=\"/login\" render={() => <Login />} />\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Polina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Alina',\r\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Evelina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\r\n        }\r\n    ]}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from './redux/redux-store';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n// let Rerender = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n// }\r\n\r\n// Rerender();\r\n\r\n// store.subscribe(() => {\r\n//     Rerender();\r\n// });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Login_body__266nK\",\"wrap\":\"Login_wrap__tKQzv\",\"input\":\"Login_input__3_aOp\",\"login\":\"Login_login__1CIiM\",\"checkbox\":\"Login_checkbox__3A0vg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__zdJDU\",\"error\":\"FormsControl_error__DaTRB\",\"formSummaryError\":\"FormsControl_formSummaryError__3pKqA\"};","import preloader from \"../../../assets/images/Preloader.svg\";\r\nimport classes from './Preloader.module.css'\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return <img src={preloader} className={classes.spinner}/>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport styles from './FormsControl.module.css'\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\r\n            <Element {...input} {...props} />\r\n            { hasError && <span> { meta.error } </span> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\")\r\nexport const Input = Element(\"input\")","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n        return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3xgVE\",\"login\":\"Header_login__1P78p\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 3, post: 'Hi, how are you?', likesCount: 5},\r\n        {id: 2, post: 'It\\'s my first post', likesCount: 32},\r\n        {id: 1, post: 'I\\'m learn react from it-kamasutra.com', likesCount: 3},\r\n    ],\r\n    profile: [],\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 4, post: action.newPostBody, likesCount: 0}]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostBody) => ({type: 'ADD-POST', newPostBody})\r\nexport const setUserProfile = (profile) => ({type: 'SET_USER_PROFILE', profile})\r\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\r\nexport default profileReducer;"],"sourceRoot":""}